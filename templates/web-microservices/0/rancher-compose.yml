version: '2'
catalog:
  name: "web-microservice"
  version: "0.1"
  description: "Web example to show microservice concept"
  questions:
    - variable: "PUBLIC_PORT"
      label: "Public port"
      description: |
        Select port to publish service
      required: true
      default: "8080"
      type: int
services:
  web-inventory:
    scale: 2
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 8080
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      strategy: recreate
      request_line: GET "/" "HTTP/1.0"
  web-shipping:
    scale: 2
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 8080
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      strategy: recreate
      request_line: GET "/" "HTTP/1.0"
  web-payments:
    scale: 2
    start_on_create: true
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 8080
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      strategy: recreate
      request_line: GET "/" "HTTP/1.0"
  web-gateway:
    scale: 1
    start_on_create: true
    lb_config:
      certs: []
      port_rules:
      - hostname: ''
        path: /payments
        priority: 1
        protocol: http
        service: web-payments
        source_port: ${PUBLIC_PORT}
        target_port: 8080
      - path: /shipping
        priority: 2
        protocol: http
        service: web-shipping
        source_port: ${PUBLIC_PORT}
        target_port: 8080
      - path: /inventory
        priority: 3
        protocol: http
        service: web-inventory
        source_port: ${PUBLIC_PORT}
        target_port: 8080
    health_check:
      healthy_threshold: 2
      response_timeout: 2000
      port: 42
      unhealthy_threshold: 3
      initializing_timeout: 60000
      interval: 2000
      reinitializing_timeout: 60000
